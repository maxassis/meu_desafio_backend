datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Gender {
  homem
  mulher
  nao_binario
  prefiro_nao_responder
}

enum Sport {
  corrida
  bicicleta
}

model Users {
  id          String        @id @default(cuid())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  UserData    UserData?
  Inscription Inscription[]
  Task        Task[]

  @@map("users")
}

model UserData {
  id              String   @id @default(cuid())
  avatar_url      String?
  avatar_filename String?
  full_name       String?
  bio             String?
  gender          Gender?
  sport           Sport?
  birthDate       String?
  createdAt       DateTime @default(now())
  user            Users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId         String   @unique

  @@map("userData")
}

model Desafio {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  location     Json
  distance     Decimal       @db.Decimal(10, 5)
  photo        String        @default("")
  inscription  Inscription[]
  priceId      String
  active       Boolean       @default(true)
  purchaseData Json @default("{}")

  @@map("desafio")
}

model Inscription {
  id          Int       @id @default(autoincrement())
  userId      String
  desafioId   Int
  progress    Decimal   @default(0) @db.Decimal(10, 5)
  tasks       Task[]
  user        Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  desafio     Desafio   @relation(fields: [desafioId], references: [id], onDelete: Cascade)
  completed   Boolean   @default(false)
  completedAt DateTime?

  @@map("inscription")
}

model Task {
  id            Int         @id @default(autoincrement())
  name          String
  environment   String
  date          DateTime?
  duration      Decimal     @db.Decimal(10, 5) // Duration in seconds
  calories      Int?
  local         String?
  distanceKm    Decimal     @default(0) @db.Decimal(10, 5)
  inscriptionId Int
  inscription   Inscription @relation(fields: [inscriptionId], references: [id], onDelete: Cascade)
  Users         Users?      @relation(fields: [usersId], references: [id])
  usersId       String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  gpsTask       Boolean?    @default(false)

  @@map("tasks")
}
