datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model Users {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  UserData      UserData?
  Participation Participation[]
  Task          Task[]

  @@map("users")
}

model UserData {
  id              String   @id @default(cuid())
  avatar_url      String?
  avatar_filename String?
  full_name       String?
  bio             String?
  gender          String? // homem, mulher, nao_binario, prefiro_nao_responder
  sport           String? // corrida, bicicleta
  birthDate       String?
  createdAt       DateTime @default(now())
  user            Users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId         String   @unique

  @@map("userData")
}

model Desafio {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  location      String
  distance      Decimal
  participation Participation[]

  @@map("desafio")
}

model Participation {
  id        Int     @id @default(autoincrement())
  userId    String
  desafioId Int
  progress  Decimal @default(0)
  tasks     Task[]
  user      Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  desafio   Desafio @relation(fields: [desafioId], references: [id], onDelete: Cascade)
  completed Boolean @default(false)  // Campo para rastrear se o desafio foi concluído
  completedAt DateTime?  // Campo opcional para rastrear quando o desafio foi concluído

  @@map("participation")
}

model Task {
  id              Int           @id @default(autoincrement())
  name            String
  environment     String
  date            DateTime?
  duration        DateTime?
  calories        Int?
  local           String?
  distanceKm      Decimal       @default(0)
  participationId Int
  participation   Participation @relation(fields: [participationId], references: [id], onDelete: Cascade)
  Users           Users?        @relation(fields: [usersId], references: [id])
  usersId         String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("tasks")
}
